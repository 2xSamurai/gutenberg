.edit-site-layout {
	height: 100%;
	background: $gray-900;
	color: $white;
	display: flex;
	align-items: stretch;
}

.edit-site-layout__hub {
	height: $header-height;
	z-index: z-index(".edit-site-layout__hub");
}

.edit-site-layout__header {
	height: $header-height;
	display: flex;
	z-index: z-index(".edit-site-layout__header");
}

.edit-site-layout__header-wrapper {
	overflow: hidden;
	position: relative;
	z-index: 10;
}

.edit-site-layout__sidebar {
	z-index: z-index(".edit-site-layout__sidebar");
	max-width: $nav-sidebar-width;
	display: flex;
	flex-direction: column;

	.resizable-editor__drag-handle {
		right: 0;
	}

	.interface-navigable-region {
		flex: 1 1 auto;
		display: flex;
		flex-direction: column;
	}

	.edit-site-sidebar__content {
		flex: 1 1 auto;
	}
}

.edit-site-layout__content {
	flex: 1 1 auto;
	height: 100%;
	padding: 16px;
}

.edit-site-layout__canvas-container {
	position: relative;
	flex-grow: 1;
	z-index: z-index(".edit-site-layout__canvas-container");

	&.is-resizing::after {
		// This covers the whole content which ensures mouse up triggers
		// even if the content is "inert".
		position: absolute;
		top: 0;
		left: 0;
		right: 0;
		bottom: 0;
		content: "";
		z-index: z-index(".edit-site-layout__canvas-container.is-resizing::after");
	}
}

.edit-site-layout__canvas {
	position: absolute;
	top: 0;
	left: 0;
	bottom: 0;
	width: 100%;

	& > div {
		color: $gray-900;
		background: $white;
		box-shadow: 0 20px 25px -5px rgba(0, 0, 0, 0.8), 0 8px 10px -6px rgba(0, 0, 0, 0.8);
	}

	@include break-medium {
		top: $canvas-padding;
		bottom: $canvas-padding;
		width: calc(100% - #{$canvas-padding});

		& > div {
			border-radius: $radius-block-ui * 4;
			// Not sure why this is necessary.
			.edit-site-layout:not(.is-full-canvas) & .edit-site-visual-editor__editor-canvas,
			.edit-site-layout:not(.is-full-canvas) & .interface-interface-skeleton__content {
				border-radius: $radius-block-ui * 4;
			}
		}

	}

	.edit-site-layout.is-full-canvas & {
		top: 0;
		bottom: 0;
		width: 100%;

		& > div {
			border-radius: 0;
		}
	}
}

// This shouldn't be necessary (we should have a way to say that a skeletton is relative
.edit-site-layout__canvas .interface-interface-skeleton {
	position: relative !important;
	min-height: 100% !important;
}

.edit-site-layout__view-mode-toggle.components-button {
	position: relative;
	color: $white;
	height: $header-height;
	width: $header-height;
	position: fixed;
	border-radius: $radius-block-ui;
	padding: 0;
	display: flex;
	align-items: center;
	justify-content: center;
	z-index: 100;
	&:hover,
	&:active {
		color: $white;
	}

	&:focus {
		box-shadow: none;
	}

	&::before {
		transition: box-shadow 0.1s ease;
		@include reduce-motion("transition");
		content: "";
		display: block;
		position: absolute;
		top: 9px;
		right: 9px;
		bottom: 9px;
		left: 9px;
		border-radius: $radius-block-ui + $border-width + $border-width;
		box-shadow: none;
	}

	// Lightened spot color focus.
	&:focus::before {
		box-shadow:
			inset 0 0 0 var(--wp-admin-border-width-focus) rgba($white, 0.1),
			inset 0 0 0 var(--wp-admin-border-width-focus) var(--wp-admin-theme-color);
	}

	.edit-site-layout__view-mode-toggle-icon {
		display: flex;
		border-radius: $radius-block-ui;
	}
}

.edit-site-layout__actions {
	z-index: z-index(".edit-site-layout__actions");
	position: fixed !important; // Need to override the default relative positioning
	top: -9999em;
	bottom: auto;
	left: auto;
	right: 0;
	width: $sidebar-width;
	color: $gray-900;
	background: $white;

	&:focus,
	&:focus-within {
		top: auto;
		bottom: 0;
	}

	&.is-entity-save-view-open {
		&:focus,
		&:focus-within {
			top: 0;
		}
	}

	@include break-medium {
		border-left: $border-width solid $gray-300;
	}
}


// me stuff

.the-frame {
	position: fixed;
	flex: 1 1 auto;
	z-index: 2;
	border-radius: 8px;
	background-color: rgba(255,255,255,.05);
	box-shadow: 0px 643px 257px rgba(0, 0, 0, 0.01), 0px 362px 217px rgba(0, 0, 0, 0.05), 0px 161px 161px rgba(0, 0, 0, 0.09), 0px 40px 88px rgba(0, 0, 0, 0.1), 0px 0px 0px rgba(0, 0, 0, 0.1);
	transition: box-shadow;
	&.resizing {
		pointer-events: none;
		.the-frame__devices {
			opacity: 1;
		}
	}
	&:hover {
		&::before {
			position: absolute;
			left: -50px;
			height: 100%;
			width: 50px;
			content: '';
		}
	}
	&.secondary:not(.edit) {
		position: absolute;
		width: 328px;
		height: 250px;
		left: 16px;
		bottom: 16px;
		margin: 0;
		z-index: 2;
		// .interface-interface-skeleton {
		// 	pointer-events: none;
		// }
	}
	.interface-interface-skeleton {
		position: static;
		height: 100%;
	}
}

.the-frame__inner {
	overflow: hidden;
	position: absolute;
	inset: 0;
}

.the-frame__devices {
	position: absolute;
	inset: 0;
	overflow: hidden;
	opacity: 0;
	transition: opacity 0.2s ease;
}

.the-frame__device {
	overflow: hidden;
	position: absolute;
	height: 100%;
	left: 50%;
	transform: translateX(-50%);
	border-left: 1px solid rgba(255,255,255,.05);
	border-right: 1px solid rgba(255,255,255,.05);
}

.the-frame__handle {
	position: absolute;
	width: 5px;
	height: 50px;
	background-color: rgba(255,255,255,.3);
	top: 50%;
	z-index: 100;
	border-radius: 5px;
	cursor: col-resize;
	display: flex;
	align-items: center;
	justify-content: flex-end;
	&:hover{
		background-color: #3858E9;
	}
	.the-frame__handle-label {
		border-radius: 2px;
		background: #3858E9;
		padding: 4px 8px;
		color: white;
		font-size: 11px;
		margin-right: 15px;
	}
}